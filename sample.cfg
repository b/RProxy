daemonize  = false
memtrim-sz = 10024
#max-nofile = 1024
# user     =
# group    =

server {
	host    = ieatfood.net
	addr    = 0.0.0.0 
	port    = 8082
	backlog = 1024 
	threads = 4

	read-timeout    = 5
	write-timeout   = 120
	pending-timeout = 2
	max-pending     = 100
	lb-method       = none

	logging {
		enabled   = true
		type      = file
		#facility = local2
		filename  = /dev/stdout
		errorlog  = /dev/stdout
		#format    = "blerp: {US_HDR}:'fufdsufdsf', upstream_user_agent: \"{US_HDR}:'User-Agent'\", upstream_accept: \"{US_HDR}:'Accept'\", downstream_content_type: \"{DS_HDR}:'Content-Type'\""
		#format    = '{SRC}:{US_SPORT} {PROXY}:{DS_SPORT} [{TS}] "{METH} {URI} {PROTO}" - {STATUS} - "{REF}" - "{UA}" - "{HOST}"'
		format      = "[frontend] {US_HDR}:'x-forwarded-for' sip: {SRC}, sport: {US_SPORT}, downstream: {PROXY}, downstream sport: {DS_SPORT}, '{METH} {URI} {PROTO}', host: {HOST}, ret: {STATUS}, upstream_x_agent_id: \"{US_HDR}:'x-agent-id'\", response_x_agent_id: \"{DS_HDR}:'x-agent-id'\""
	}

	headers {
		x-forwarded-for   = true
		x-ssl-subject     = false 
		x-ssl-issuer      = false 
		x-ssl-notbefore   = false 
		x-ssl-notafter    = false 
		x-ssl-serial      = false 
		x-ssl-cipher      = false 
		x-ssl-certificate = false
	}

	ssl {
		enabled           = true
		protocols-on      = { TLSv1 }
		protocols-off     = { SSLv2, SSLv3 }
		cert              = ./server.crt
		key               = ./server.key
		ca                = ""
		capath            = ""
		ciphers           = "ECDHE-RSA-RC4-SHA:ECDHE-RSA-AES128-SHA:RC4-SHA:RC4-MD5:ECDHE-RSA-AES256-SHA:AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:DES-CBC3-SHA:AES128-SHA"
		verify-peer       = false
		enforce-peer-cert = false
		verify-depth      = 4
		cache-enabled     = false
		cache-timeout     = 0 #1024
		context-timeout   = 0 #500
	}

	rewrite {
		src = "^(/).*"
		dst = "/"
	}

	downstream {
		addr           = "127.0.0.1"
		port           = 8081 
		connections    = 2
		high-watermark = 10000
		# high-watermark = 2097152 # 2MB
		#write-timeout  = 1
		#read-timeout = 1

		retry {
			seconds  = 0
			useconds = 90000 
		}
	}
}
